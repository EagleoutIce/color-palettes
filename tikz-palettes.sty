% tikz-palettes.sty
% Author: Florian Sihler, 23.08.2020
%
% This package uses color-palettes to offer palettes to be used in tikz
% All internal commands are prefixed by 'tpl'

\ProvidesPackage{tikz-palettes}[2020/08/23 v1.2 a style and palette control package based on color-palettes for tikz]

% Options
% -----------
\newif\iftpl@setup@hyperref@
\DeclareOption{hyperref}{\tpl@setup@hyperref@true}
\DeclareOption{nohyperref}{\tpl@setup@hyperref@false}

\newif\iftpl@setup@enumitem@
\DeclareOption{enumitem}{\tpl@setup@enumitem@true}
\DeclareOption{noenumitem}{\tpl@setup@enumitem@false}

\newif\iftpl@setup@loadpkgs@ \tpl@setup@loadpkgs@true
\DeclareOption{loadpkgs}{\tpl@setup@loadpkgs@true}
\DeclareOption{noloadpkgs}{\tpl@setup@loadpkgs@false}

\newif\iftpl@setup@addons@
\DeclareOption{addons}{\tpl@setup@addons@true}
\DeclareOption{noaddons}{\tpl@setup@addons@false}

\newif\iftpl@setup@debug@
\DeclareOption{debug}{\tpl@setup@debug@true}
\DeclareOption{nodebug}{\tpl@setup@debug@false}

\newif\iftpl@setup@rect@
\DeclareOption{rect}{\tpl@setup@rect@true}
\DeclareOption{norect}{\tpl@setup@rect@false}
\ProcessOptions*

% Packages
% -----------
\iftpl@setup@loadpkgs@ \RequirePackage{tikz} \fi
\iftpl@setup@hyperref@\PassOptionsToPackage{hyperref}{color-palettes}\else
\PassOptionsToPackage{nohyperref}{color-palettes}\fi
\iftpl@setup@enumitem@\PassOptionsToPackage{enumitem}{color-palettes}\else
\PassOptionsToPackage{noenumitem}{color-palettes}\fi
\iftpl@setup@rect@\PassOptionsToPackage{rect}{color-palettes}\else
\PassOptionsToPackage{norect}{color-palettes}\fi

\iftpl@setup@addons@\PassOptionsToPackage{addons}{color-palettes}\else
\PassOptionsToPackage{noaddons}{color-palettes}\fi

\iftpl@setup@debug@\PassOptionsToPackage{debug}{color-palettes}\else
\PassOptionsToPackage{nodebug}{color-palettes}\fi

\RequirePackage{color-palettes}
\usetikzlibrary{patterns}

% Definitions
% -----------
\iftpl@setup@debug@\let\tpl@debug\typeout
\else\let\tpl@debug\@gobble\fi

\def\tpl@none{<None>}
\edef\tpl@registered@palettes{\tpl@none}

\def\AllTikzPalettes{\tpl@registered@palettes}

\def\tpl@err@noname@palette{\PackageError{tikz-palettes}{A tikz palette must have a name}
{An empty name for a tikz palette is reserved and not to be used}}

% #1 name of palette
% #2-#5 tikz-style definitions in the form 'name: style'
%       example: "blau gestrichelt: postaction={north west lines},fill=paletteA"
% #6 text-style 'writ'
\newcommand*\DefineTikzPalette[6]{%
    \protected@edef\@tpl@tmp{#1}%
    \ifx\@tpl@tmp\@empty\tpl@err@noname@palette\fi
    \tpl@debug{Def tikz palette '#1'}%
    \expandafter\gdef\csname tpl@palette@#1\endcsname{%
        \expandafter\tpl@parse@styledata{tikzA}#2\@nil
        \expandafter\tpl@parse@styledata{tikzB}#3\@nil
        \expandafter\tpl@parse@styledata{tikzC}#4\@nil
        \expandafter\tpl@parse@styledata{tikzD}#5\@nil
        \expandafter\tpl@parse@styledata{writ}#6\@nil
    }%
    \ifx\tpl@registered@palettes\tpl@none
        \xdef\tpl@registered@palettes{#1}%
    \else
        \xdef\tpl@registered@palettes{\tpl@registered@palettes, #1}%
    \fi
}

\def\tpl@parse@styledata#1#2: #3\@nil{%
    \tikzset{#1/.style={#3}}%
    \tpl@debug{Def: '#1name'}%
    \expandafter\gdef\csname#1name\endcsname{#2}%
}

\def\CurrentTikzPalette{}

\def\tpl@undef#1{%
    \expandafter\gdef\csname#1name\endcsname\@nil
}
% clears all registers
\def\tpl@clear@palette{%
    \tpl@undef{tikzA}\tpl@undef{tikzB}\tpl@undef{tikzC}\tpl@undef{tikzD}%
}

\newcommand*\UseTikzPalette[1]{%
\protected@edef\tpl@plt{#1}%
\ifx\tpl@plt\@empty \tpl@clear@palette\gdef\CurrentTikzPalette{}\else
\tpl@debug{Using tikz palette '#1'}%
\@ifundefined{tpl@palette@#1}{\tpl@err@unkown@palette{#1}}{\@nameuse{tpl@palette@#1}}\xdef\CurrentTikzPalette{#1}\fi}

\newcommand*\WithTikzPalette[2]{%
\begingroup
\protected@edef\@tpl@tmp{\CurrentTikzPalette}%
\UseTikzPalette{#1}#2%
\UseTikzPalette{\@tpl@tmp}% in case of none
\endgroup}

\newcommand*\ShowcaseTikzPalette[1]{%
    \WithTikzPalette{#1}{\ShowcaseCurrentTikzPalette}%
}

\def\tpl@showcase@palette#1{%
    \strut\emph{tikz#1} & \tikz[baseline=1ex]\draw[tikz#1] (0,0) rectangle ++(1.75,.435); & \@nameuse{tikz#1name}%
}
\def\tpl@showcase@text{%
    \strut\emph{writ} & \tikz[baseline=2ex]{\draw[tikzA] (0,0) rectangle ++(1.75,.55);\node[writ] at (.875,.275) {Example};} & \@nameuse{writname}%
}

\newcommand*{\ShowcaseCurrentTikzPalette}{%
\begingroup
\renewcommand{\arraystretch}{1.5}\begin{tabular}{ccl}%
    \multicolumn{3}{c}{\textbf{Palette: \strut\textit{\CurrentTikzPalette}}}\\
    ~Identifier~ & ~~Color~~ & Noun~~~~~~~~~~~~~~~~~~~~~~ \\
    \hline
    \tpl@showcase@palette{A} \\ %
    \tpl@showcase@palette{B} \\ %
    \tpl@showcase@palette{C} \\ %
    \tpl@showcase@palette{D} \\[.033em] %
    \tpl@showcase@text{} \\ %
\end{tabular}%
\endgroup}

% The default palettes
% -----------
\DefineTikzPalette{CleanPlate}
{\paletteAname: paletteA,fill=shadeA}
{\paletteBname: paletteB,fill=shadeB}
{\paletteCname: paletteC,fill=shadeC}
{\paletteDname: paletteD,fill=shadeD}
{Schwarz: text=black}

\DefineTikzPalette{CleanShade}
{\paletteAname: draw=shadeA,fill=shadeA}
{\paletteBname: draw=shadeB,fill=shadeB}
{\paletteCname: draw=shadeC,fill=shadeC}
{\paletteDname: draw=shadeD,fill=shadeD}
{Schwarz: text=black}


\DefineTikzPalette{DeepInk}
{\paletteAname: paletteA,fill=paletteA}
{\paletteBname: paletteB,fill=paletteB}
{\paletteCname: paletteC,fill=paletteC}
{\paletteDname: paletteD,fill=paletteD}
{Wei√ü: text=white!99!black}

\DefineTikzPalette{CleanStripes}
{\paletteAname{} gestreift: paletteA,fill=shadeA,postaction={pattern={north west lines},pattern color=paletteA}}
{\paletteBname: paletteB,fill=shadeB}
{\paletteCname: paletteC,fill=shadeC}
{\paletteDname{} gepunktet: paletteD,fill=shadeD,postaction={pattern={dots},pattern color=paletteD}}
{Schwarz: text=black,fill=white,fill opacity=.9}

\DefineTikzPalette{Blueprint}
{\paletteAname: paletteA}
{\paletteBname: paletteB}
{\paletteCname: paletteC}
{\paletteDname: paletteD}
{Schwarz: text=black}

\iftpl@setup@addons@
\DefineTikzPalette{MajorMark}
{\paletteAname{} gestreift: postaction={pattern={north west lines},pattern color=paletteA}}
{\---: }{\---: }{\---: }
{Schwarz: text=black,fill=white}

\DefineTikzPalette{BlueprintStripes}
{\paletteAname{} gestreift: paletteA,postaction={pattern={north west lines},pattern color=paletteA}}
{\paletteBname: paletteB}
{\paletteCname: paletteC}
{\paletteDname{} gepunktet: paletteD,postaction={pattern={dots},pattern color=paletteD}}
{Schwarz: text=black,fill=white}

\DefineTikzPalette{SpecialMark}
{\---: }{\---: }{\---: }
{gestreift: postaction={pattern={north west lines},pattern color=black}}
{Schwarz: text=black}

\DefineTikzPalette{RainbowMark}
{diagonal gestreift: postaction={pattern={north west lines}}}
{vertikal gestreift: postaction={pattern={vertical lines}}}
{horizontal gestreift: postaction={pattern={horizontal lines}}}
{gepunktet: postaction={pattern={dots}}}
{Schwarz: text=black,fill=white}

\DefineTikzPalette{RainbowStarMark}
{diagonal gestreift: postaction={pattern={north west lines}}}
{vertikal gestreift: postaction={pattern={vertical lines}}}
{gepunktet: postaction={pattern={dots}}}
{gesternt: postaction={pattern={fivepointed stars}}}
{Schwarz: text=black,fill=white}
\fi
\UseTikzPalette{DeepInk}
\endinput